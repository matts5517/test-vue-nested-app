{"version":3,"sources":["webpack:///./node_modules/@arcgis/core/core/workers/request.js"],"names":["s","a","n","o","responseType","i","signal","invokeStaticMessage","url","options","then","async","r","l","u","c","f","t","data","ArrayBuffer","Blob","FileReaderSync","readAsText","JSON","parse","b","requestOptions","message","error","fetch","ssl"],"mappings":"kHAAA,uFAI4F,IAAIA,EAAE,SAASC,EAAEA,EAAEC,EAAE,IAAI,IAAIC,EAAED,EAAEE,aAAaD,EAAE,iBAAiBA,GAAG,SAASA,GAAG,SAASA,GAAG,WAAWA,GAAG,wBAAwBA,GAAG,SAASA,IAAIA,EAAE,QAAQA,EAAE,OAAO,MAAME,EAAE,eAAEH,EAAEI,QAAQ,cAAcJ,EAAEI,OAAO,OAAEC,oBAAoB,UAAU,CAACC,IAAIP,EAAEQ,QAAQP,GAAG,CAACI,OAAOD,IAAIK,KAAK,MAACC,IAAU,IAAIC,EAAEC,EAAEC,EAAEC,EAAEC,EAAE,GAAGC,EAAEC,KAAK,GAAGD,EAAEC,gBAAgBC,aAAa,KAAK,SAAShB,GAAG,SAASA,GAAG,SAASA,IAAIS,EAAE,IAAIQ,KAAK,CAACH,EAAEC,OAAO,SAASf,GAAG,SAASA,IAAIH,IAAIA,EAAE,IAAIqB,gBAAgBN,EAAEf,EAAEsB,WAAWV,GAAG,SAAST,KAAK,CAAC,IAAIU,EAAEU,KAAKC,MAAMT,GAAG,MAAM,MAAMU,GAAG,MAAMR,EAAE,IAAIQ,EAAEjB,IAAIP,EAAEyB,eAAexB,GAAG,MAAM,IAAI,OAAE,iBAAiBuB,EAAEE,QAAQV,GAAG,GAAGJ,EAAEe,MAAM,CAAC,MAAMX,EAAE,IAAIJ,EAAEe,MAAMpB,IAAIP,EAAEyB,eAAexB,GAAG,MAAM,IAAI,OAAE,iBAAiBW,EAAEe,MAAMD,QAAQV,SAAS,WAAWd,IAAIc,EAAEC,KAAKZ,OAAOD,EAAES,QAAQe,MAAMZ,EAAEC,KAAKV,IAAIS,EAAEC,OAAO,OAAOf,GAAG,IAAI,OAAOa,EAAEJ,EAAE,MAAM,IAAI,OAAOI,EAAEH,EAAE,MAAM,IAAI,SAASG,EAAEF,EAAE,MAAM,IAAI,OAAOE,EAAED,EAAE,MAAM,QAAQC,EAAEC,EAAEC,KAAK,MAAM,CAACA,KAAKF,EAAEU,eAAexB,EAAE4B,IAAIb,EAAEa,IAAItB,IAAIP","file":"js/chunk-2d0d03e5.fa78978f.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.20/esri/copyright.txt for details.\n*/\nimport e from\"../Error.js\";import t from\"../global.js\";import{unwrap as r}from\"../maybe.js\";let s;function a(a,n={}){let o=n.responseType;o?\"array-buffer\"!==o&&\"blob\"!==o&&\"json\"!==o&&\"native\"!==o&&\"native-request-init\"!==o&&\"text\"!==o&&(o=\"text\"):o=\"json\";const i=r(n.signal);return delete n.signal,t.invokeStaticMessage(\"request\",{url:a,options:n},{signal:i}).then((async t=>{let r,l,u,c,f;if(t.data)if(t.data instanceof ArrayBuffer){if(!(\"json\"!==o&&\"text\"!==o&&\"blob\"!==o||(r=new Blob([t.data]),\"json\"!==o&&\"text\"!==o||(s||(s=new FileReaderSync),c=s.readAsText(r),\"json\"!==o)))){try{l=JSON.parse(c||null)}catch(b){const t={...b,url:a,requestOptions:n};throw new e(\"request:server\",b.message,t)}if(l.error){const t={...l.error,url:a,requestOptions:n};throw new e(\"request:server\",l.error.message,t)}}}else\"native\"===o&&(t.data.signal=i,u=await fetch(t.data.url,t.data));switch(o){case\"blob\":f=r;break;case\"json\":f=l;break;case\"native\":f=u;break;case\"text\":f=c;break;default:f=t.data}return{data:f,requestOptions:n,ssl:t.ssl,url:a}}))}export{a as execute};\n"],"sourceRoot":""}